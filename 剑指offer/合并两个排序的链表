# -*- coding:utf-8 -*-
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
class Solution:
    # 返回合并后列表
    def Merge(self, pHead1, pHead2):
        # write code here
        merge = ListNode(0)
        p = merge
        while(pHead1!=None and pHead2!= None):
            if pHead1.val <pHead2.val:
                merge.next = pHead1
                pHead1 = pHead1.next
            else:
                merge.next = pHead2
                pHead2 = pHead2.next
            merge = merge.next
        if pHead1:
            merge.next = pHead1
        if pHead2:
            merge.next = pHead2
        return p.next
#思路：首先初始化两个链表a，b；判断两个链表的节点小则插入，最后插入剩余的节点
